'use strict';

var _regeneratorRuntime = require('babel-runtime/regenerator')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

var _chai = require('chai');

var _chai2 = _interopRequireDefault(_chai);

var _chaiAsPromised = require('chai-as-promised');

var _chaiAsPromised2 = _interopRequireDefault(_chaiAsPromised);

var _desired = require('../../desired');

var _helpersSession = require('../../helpers/session');

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

_chai2['default'].should();
_chai2['default'].use(_chaiAsPromised2['default']);

var caps = _lodash2['default'].defaults({
  appPackage: 'io.appium.android.apis',
  appActivity: '.view.WebView1',
  showChromedriverLog: true
}, _desired.APIDEMOS_CAPS);

var WEBVIEW = 'WEBVIEW_io.appium.android.apis';
var NATIVE = 'NATIVE_APP';
var NATIVE_LOCATOR = "//*[@class='android.widget.TextView']";
var WEBVIEW_LOCATOR = "//*[text()='This page is a Selenium sandbox']";

describe('apidemo - context @skip-ci', function () {
  var driver = undefined;
  before(function callee$1$0() {
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap((0, _helpersSession.initDriver)(caps));

        case 2:
          driver = context$2$0.sent;

        case 3:
        case 'end':
          return context$2$0.stop();
      }
    }, null, this);
  });
  after(function callee$1$0() {
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(driver.quit());

        case 2:
        case 'end':
          return context$2$0.stop();
      }
    }, null, this);
  });
  it('should find webview context', function callee$1$0() {
    var contexts;
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(driver.contexts());

        case 2:
          contexts = context$2$0.sent;

          contexts.length.should.be.at.least(2);

          // make sure the process was found, otherwise it comes out as "undefined"
          contexts.join('').should.not.include('undefined');
          contexts.join('').should.include(WEBVIEW);

        case 6:
        case 'end':
          return context$2$0.stop();
      }
    }, null, this);
  });
  it('should go into the webview', function callee$1$0() {
    var contexts;
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          // TODO: Fix this on TestObject. Chromedriver does not exist error
          if (process.env.TESTOBJECT_E2E_TESTS) {
            this.skip();
          }
          context$2$0.next = 3;
          return _regeneratorRuntime.awrap(driver.contexts());

        case 3:
          contexts = context$2$0.sent;
          context$2$0.next = 6;
          return _regeneratorRuntime.awrap(driver.context(contexts[1]));

        case 6:
        case 'end':
          return context$2$0.stop();
      }
    }, null, this);
  });
  it('should be able to go into native context and interact with it after restarting app', function callee$1$0() {
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(driver.closeApp());

        case 2:
          context$2$0.next = 4;
          return _regeneratorRuntime.awrap(driver.launchApp());

        case 4:
          context$2$0.next = 6;
          return _regeneratorRuntime.awrap(driver.context(NATIVE));

        case 6:
          context$2$0.next = 8;
          return _regeneratorRuntime.awrap(driver.elementByXPath(NATIVE_LOCATOR));

        case 8:
        case 'end':
          return context$2$0.stop();
      }
    }, null, this);
  });
  it('should be able to go into native context and interact with it after resetting app', function callee$1$0() {
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(driver.resetApp());

        case 2:
          context$2$0.next = 4;
          return _regeneratorRuntime.awrap(driver.context(NATIVE));

        case 4:
          context$2$0.next = 6;
          return _regeneratorRuntime.awrap(driver.elementByXPath(NATIVE_LOCATOR));

        case 6:
        case 'end':
          return context$2$0.stop();
      }
    }, null, this);
  });
  it('should be able to go into webview context and interact with it after restarting app', function callee$1$0() {
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          // TODO: Fix this on TestObject. Chromedriver does not exist error
          if (process.env.TESTOBJECT_E2E_TESTS) {
            this.skip();
          }
          context$2$0.next = 3;
          return _regeneratorRuntime.awrap(driver.closeApp());

        case 3:
          context$2$0.next = 5;
          return _regeneratorRuntime.awrap(driver.launchApp());

        case 5:
          context$2$0.next = 7;
          return _regeneratorRuntime.awrap(driver.context(WEBVIEW));

        case 7:
          context$2$0.next = 9;
          return _regeneratorRuntime.awrap(driver.elementByXPath(WEBVIEW_LOCATOR));

        case 9:
        case 'end':
          return context$2$0.stop();
      }
    }, null, this);
  });
  it('should be able to go into webview context and interact with it after resetting app', function callee$1$0() {
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          // TODO: Fix this on TestObject. Chromedriver does not exist error
          if (process.env.TESTOBJECT_E2E_TESTS) {
            this.skip();
          }
          context$2$0.next = 3;
          return _regeneratorRuntime.awrap(driver.resetApp());

        case 3:
          context$2$0.next = 5;
          return _regeneratorRuntime.awrap(driver.context(WEBVIEW));

        case 5:
          context$2$0.next = 7;
          return _regeneratorRuntime.awrap(driver.elementByXPath(WEBVIEW_LOCATOR));

        case 7:
        case 'end':
          return context$2$0.stop();
      }
    }, null, this);
  });
});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlc3QvZnVuY3Rpb25hbC9jb21tYW5kcy9nZW5lcmFsL2NvbnRleHQtZTJlLXNwZWNzLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7OztvQkFBaUIsTUFBTTs7Ozs4QkFDSSxrQkFBa0I7Ozs7dUJBQ2YsZUFBZTs7OEJBQ2xCLHVCQUF1Qjs7c0JBQ3BDLFFBQVE7Ozs7QUFHdEIsa0JBQUssTUFBTSxFQUFFLENBQUM7QUFDZCxrQkFBSyxHQUFHLDZCQUFnQixDQUFDOztBQUV6QixJQUFNLElBQUksR0FBRyxvQkFBRSxRQUFRLENBQUM7QUFDdEIsWUFBVSxFQUFFLHdCQUF3QjtBQUNwQyxhQUFXLEVBQUUsZ0JBQWdCO0FBQzdCLHFCQUFtQixFQUFFLElBQUk7Q0FDMUIseUJBQWdCLENBQUM7O0FBRWxCLElBQU0sT0FBTyxHQUFHLGdDQUFnQyxDQUFDO0FBQ2pELElBQU0sTUFBTSxHQUFHLFlBQVksQ0FBQztBQUM1QixJQUFNLGNBQWMsR0FBRyx1Q0FBdUMsQ0FBQztBQUMvRCxJQUFNLGVBQWUsR0FBRywrQ0FBK0MsQ0FBQzs7QUFFeEUsUUFBUSxDQUFDLDRCQUE0QixFQUFFLFlBQVk7QUFDakQsTUFBSSxNQUFNLFlBQUEsQ0FBQztBQUNYLFFBQU0sQ0FBQzs7Ozs7MkNBQ1UsZ0NBQVcsSUFBSSxDQUFDOzs7QUFBL0IsZ0JBQU07Ozs7Ozs7R0FDUCxDQUFDLENBQUM7QUFDSCxPQUFLLENBQUM7Ozs7OzJDQUNFLE1BQU0sQ0FBQyxJQUFJLEVBQUU7Ozs7Ozs7R0FDcEIsQ0FBQyxDQUFDO0FBQ0gsSUFBRSxDQUFDLDZCQUE2QixFQUFFO1FBQzVCLFFBQVE7Ozs7OzJDQUFTLE1BQU0sQ0FBQyxRQUFRLEVBQUU7OztBQUFsQyxrQkFBUTs7QUFDWixrQkFBUSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUM7OztBQUd0QyxrQkFBUSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLE9BQU8sQ0FBQyxXQUFXLENBQUMsQ0FBQztBQUNsRCxrQkFBUSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxDQUFDOzs7Ozs7O0dBQzNDLENBQUMsQ0FBQztBQUNILElBQUUsQ0FBQyw0QkFBNEIsRUFBRTtRQUszQixRQUFROzs7OztBQUhaLGNBQUksT0FBTyxDQUFDLEdBQUcsQ0FBQyxvQkFBb0IsRUFBRTtBQUNwQyxnQkFBSSxDQUFDLElBQUksRUFBRSxDQUFDO1dBQ2I7OzJDQUNvQixNQUFNLENBQUMsUUFBUSxFQUFFOzs7QUFBbEMsa0JBQVE7OzJDQUNOLE1BQU0sQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDOzs7Ozs7O0dBQ2xDLENBQUMsQ0FBQztBQUNILElBQUUsQ0FBQyxvRkFBb0YsRUFBRTs7Ozs7MkNBQ2pGLE1BQU0sQ0FBQyxRQUFRLEVBQUU7Ozs7MkNBQ2pCLE1BQU0sQ0FBQyxTQUFTLEVBQUU7Ozs7MkNBQ2xCLE1BQU0sQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDOzs7OzJDQUN0QixNQUFNLENBQUMsY0FBYyxDQUFDLGNBQWMsQ0FBQzs7Ozs7OztHQUM1QyxDQUFDLENBQUM7QUFDSCxJQUFFLENBQUMsbUZBQW1GLEVBQUU7Ozs7OzJDQUNoRixNQUFNLENBQUMsUUFBUSxFQUFFOzs7OzJDQUNqQixNQUFNLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQzs7OzsyQ0FDdEIsTUFBTSxDQUFDLGNBQWMsQ0FBQyxjQUFjLENBQUM7Ozs7Ozs7R0FDNUMsQ0FBQyxDQUFDO0FBQ0gsSUFBRSxDQUFDLHFGQUFxRixFQUFFOzs7OztBQUV4RixjQUFJLE9BQU8sQ0FBQyxHQUFHLENBQUMsb0JBQW9CLEVBQUU7QUFDcEMsZ0JBQUksQ0FBQyxJQUFJLEVBQUUsQ0FBQztXQUNiOzsyQ0FDSyxNQUFNLENBQUMsUUFBUSxFQUFFOzs7OzJDQUNqQixNQUFNLENBQUMsU0FBUyxFQUFFOzs7OzJDQUNsQixNQUFNLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQzs7OzsyQ0FDdkIsTUFBTSxDQUFDLGNBQWMsQ0FBQyxlQUFlLENBQUM7Ozs7Ozs7R0FDN0MsQ0FBQyxDQUFDO0FBQ0gsSUFBRSxDQUFDLG9GQUFvRixFQUFFOzs7OztBQUV2RixjQUFJLE9BQU8sQ0FBQyxHQUFHLENBQUMsb0JBQW9CLEVBQUU7QUFDcEMsZ0JBQUksQ0FBQyxJQUFJLEVBQUUsQ0FBQztXQUNiOzsyQ0FDSyxNQUFNLENBQUMsUUFBUSxFQUFFOzs7OzJDQUNqQixNQUFNLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQzs7OzsyQ0FDdkIsTUFBTSxDQUFDLGNBQWMsQ0FBQyxlQUFlLENBQUM7Ozs7Ozs7R0FDN0MsQ0FBQyxDQUFDO0NBQ0osQ0FBQyxDQUFDIiwiZmlsZSI6InRlc3QvZnVuY3Rpb25hbC9jb21tYW5kcy9nZW5lcmFsL2NvbnRleHQtZTJlLXNwZWNzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGNoYWkgZnJvbSAnY2hhaSc7XG5pbXBvcnQgY2hhaUFzUHJvbWlzZWQgZnJvbSAnY2hhaS1hcy1wcm9taXNlZCc7XG5pbXBvcnQgeyBBUElERU1PU19DQVBTIH0gZnJvbSAnLi4vLi4vZGVzaXJlZCc7XG5pbXBvcnQgeyBpbml0RHJpdmVyIH0gZnJvbSAnLi4vLi4vaGVscGVycy9zZXNzaW9uJztcbmltcG9ydCBfIGZyb20gJ2xvZGFzaCc7XG5cblxuY2hhaS5zaG91bGQoKTtcbmNoYWkudXNlKGNoYWlBc1Byb21pc2VkKTtcblxuY29uc3QgY2FwcyA9IF8uZGVmYXVsdHMoe1xuICBhcHBQYWNrYWdlOiAnaW8uYXBwaXVtLmFuZHJvaWQuYXBpcycsXG4gIGFwcEFjdGl2aXR5OiAnLnZpZXcuV2ViVmlldzEnLFxuICBzaG93Q2hyb21lZHJpdmVyTG9nOiB0cnVlLFxufSwgQVBJREVNT1NfQ0FQUyk7XG5cbmNvbnN0IFdFQlZJRVcgPSAnV0VCVklFV19pby5hcHBpdW0uYW5kcm9pZC5hcGlzJztcbmNvbnN0IE5BVElWRSA9ICdOQVRJVkVfQVBQJztcbmNvbnN0IE5BVElWRV9MT0NBVE9SID0gXCIvLypbQGNsYXNzPSdhbmRyb2lkLndpZGdldC5UZXh0VmlldyddXCI7XG5jb25zdCBXRUJWSUVXX0xPQ0FUT1IgPSBcIi8vKlt0ZXh0KCk9J1RoaXMgcGFnZSBpcyBhIFNlbGVuaXVtIHNhbmRib3gnXVwiO1xuXG5kZXNjcmliZSgnYXBpZGVtbyAtIGNvbnRleHQgQHNraXAtY2knLCBmdW5jdGlvbiAoKSB7XG4gIGxldCBkcml2ZXI7XG4gIGJlZm9yZShhc3luYyBmdW5jdGlvbiAoKSB7XG4gICAgZHJpdmVyID0gYXdhaXQgaW5pdERyaXZlcihjYXBzKTtcbiAgfSk7XG4gIGFmdGVyKGFzeW5jIGZ1bmN0aW9uICgpIHtcbiAgICBhd2FpdCBkcml2ZXIucXVpdCgpO1xuICB9KTtcbiAgaXQoJ3Nob3VsZCBmaW5kIHdlYnZpZXcgY29udGV4dCcsIGFzeW5jIGZ1bmN0aW9uICgpIHtcbiAgICBsZXQgY29udGV4dHMgPSBhd2FpdCBkcml2ZXIuY29udGV4dHMoKTtcbiAgICBjb250ZXh0cy5sZW5ndGguc2hvdWxkLmJlLmF0LmxlYXN0KDIpO1xuXG4gICAgLy8gbWFrZSBzdXJlIHRoZSBwcm9jZXNzIHdhcyBmb3VuZCwgb3RoZXJ3aXNlIGl0IGNvbWVzIG91dCBhcyBcInVuZGVmaW5lZFwiXG4gICAgY29udGV4dHMuam9pbignJykuc2hvdWxkLm5vdC5pbmNsdWRlKCd1bmRlZmluZWQnKTtcbiAgICBjb250ZXh0cy5qb2luKCcnKS5zaG91bGQuaW5jbHVkZShXRUJWSUVXKTtcbiAgfSk7XG4gIGl0KCdzaG91bGQgZ28gaW50byB0aGUgd2VidmlldycsIGFzeW5jIGZ1bmN0aW9uICgpIHtcbiAgICAvLyBUT0RPOiBGaXggdGhpcyBvbiBUZXN0T2JqZWN0LiBDaHJvbWVkcml2ZXIgZG9lcyBub3QgZXhpc3QgZXJyb3JcbiAgICBpZiAocHJvY2Vzcy5lbnYuVEVTVE9CSkVDVF9FMkVfVEVTVFMpIHtcbiAgICAgIHRoaXMuc2tpcCgpO1xuICAgIH1cbiAgICBsZXQgY29udGV4dHMgPSBhd2FpdCBkcml2ZXIuY29udGV4dHMoKTtcbiAgICBhd2FpdCBkcml2ZXIuY29udGV4dChjb250ZXh0c1sxXSk7XG4gIH0pO1xuICBpdCgnc2hvdWxkIGJlIGFibGUgdG8gZ28gaW50byBuYXRpdmUgY29udGV4dCBhbmQgaW50ZXJhY3Qgd2l0aCBpdCBhZnRlciByZXN0YXJ0aW5nIGFwcCcsIGFzeW5jIGZ1bmN0aW9uICgpIHtcbiAgICBhd2FpdCBkcml2ZXIuY2xvc2VBcHAoKTtcbiAgICBhd2FpdCBkcml2ZXIubGF1bmNoQXBwKCk7XG4gICAgYXdhaXQgZHJpdmVyLmNvbnRleHQoTkFUSVZFKTtcbiAgICBhd2FpdCBkcml2ZXIuZWxlbWVudEJ5WFBhdGgoTkFUSVZFX0xPQ0FUT1IpO1xuICB9KTtcbiAgaXQoJ3Nob3VsZCBiZSBhYmxlIHRvIGdvIGludG8gbmF0aXZlIGNvbnRleHQgYW5kIGludGVyYWN0IHdpdGggaXQgYWZ0ZXIgcmVzZXR0aW5nIGFwcCcsIGFzeW5jIGZ1bmN0aW9uICgpIHtcbiAgICBhd2FpdCBkcml2ZXIucmVzZXRBcHAoKTtcbiAgICBhd2FpdCBkcml2ZXIuY29udGV4dChOQVRJVkUpO1xuICAgIGF3YWl0IGRyaXZlci5lbGVtZW50QnlYUGF0aChOQVRJVkVfTE9DQVRPUik7XG4gIH0pO1xuICBpdCgnc2hvdWxkIGJlIGFibGUgdG8gZ28gaW50byB3ZWJ2aWV3IGNvbnRleHQgYW5kIGludGVyYWN0IHdpdGggaXQgYWZ0ZXIgcmVzdGFydGluZyBhcHAnLCBhc3luYyBmdW5jdGlvbiAoKSB7XG4gICAgLy8gVE9ETzogRml4IHRoaXMgb24gVGVzdE9iamVjdC4gQ2hyb21lZHJpdmVyIGRvZXMgbm90IGV4aXN0IGVycm9yXG4gICAgaWYgKHByb2Nlc3MuZW52LlRFU1RPQkpFQ1RfRTJFX1RFU1RTKSB7XG4gICAgICB0aGlzLnNraXAoKTtcbiAgICB9XG4gICAgYXdhaXQgZHJpdmVyLmNsb3NlQXBwKCk7XG4gICAgYXdhaXQgZHJpdmVyLmxhdW5jaEFwcCgpO1xuICAgIGF3YWl0IGRyaXZlci5jb250ZXh0KFdFQlZJRVcpO1xuICAgIGF3YWl0IGRyaXZlci5lbGVtZW50QnlYUGF0aChXRUJWSUVXX0xPQ0FUT1IpO1xuICB9KTtcbiAgaXQoJ3Nob3VsZCBiZSBhYmxlIHRvIGdvIGludG8gd2VidmlldyBjb250ZXh0IGFuZCBpbnRlcmFjdCB3aXRoIGl0IGFmdGVyIHJlc2V0dGluZyBhcHAnLCBhc3luYyBmdW5jdGlvbiAoKSB7XG4gICAgLy8gVE9ETzogRml4IHRoaXMgb24gVGVzdE9iamVjdC4gQ2hyb21lZHJpdmVyIGRvZXMgbm90IGV4aXN0IGVycm9yXG4gICAgaWYgKHByb2Nlc3MuZW52LlRFU1RPQkpFQ1RfRTJFX1RFU1RTKSB7XG4gICAgICB0aGlzLnNraXAoKTtcbiAgICB9XG4gICAgYXdhaXQgZHJpdmVyLnJlc2V0QXBwKCk7XG4gICAgYXdhaXQgZHJpdmVyLmNvbnRleHQoV0VCVklFVyk7XG4gICAgYXdhaXQgZHJpdmVyLmVsZW1lbnRCeVhQYXRoKFdFQlZJRVdfTE9DQVRPUik7XG4gIH0pO1xufSk7XG4iXSwic291cmNlUm9vdCI6Ii4uLy4uLy4uLy4uLy4uIn0=
